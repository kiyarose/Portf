---
name: Dependabot Rebase Automation

on:
  schedule:
    - cron: "0 * * * *"   # Hourly at minute 0
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  rebase-stale-dependabot-prs:
    runs-on: ubuntu-latest
    steps:
      - name: Install jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Find and rebase stale Dependabot PRs using PAT
        env:
          REPO: ${{ github.repository }}
          TOKEN: ${{ secrets.REBASE_TOKEN }}
        run: |
          set -euo pipefail

          if [ -z "${TOKEN:-}" ]; then
            echo "ERROR: REBASE_TOKEN secret is not set. Create a repo or org secret named REBASE_TOKEN containing a PAT with repo write access." >&2
            exit 1
          fi

          echo "Listing open pull requests..."
          prs=$(curl -s -H "Authorization: token $TOKEN" -H "Accept: application/vnd.github+json" "https://api.github.com/repos/$REPO/pulls?state=open&per_page=100")

          echo "$prs" | jq -c '.[] | select(.user.login=="dependabot[bot]" or .user.login=="dependabot-preview[bot]")' | while read -r pr; do
            number=$(echo "$pr" | jq -r '.number')
            head_ref=$(echo "$pr" | jq -r '.head.ref')
            base_ref=$(echo "$pr" | jq -r '.base.ref')

            echo ""
            echo "Checking PR #$number ($head_ref -> $base_ref)"

            comparison=$(curl -s -H "Authorization: token $TOKEN" -H "Accept: application/vnd.github+json" "https://api.github.com/repos/$REPO/compare/$base_ref...$head_ref")
            behind=$(echo "$comparison" | jq -r '.behind_by // 0')

            if [ "$behind" -gt 0 ]; then
              echo "PR #$number is $behind commit(s) behind $base_ref"

              comments=$(curl -s -H "Authorization: token $TOKEN" -H "Accept: application/vnd.github+json" "https://api.github.com/repos/$REPO/issues/$number/comments?per_page=100")

              # Get the most recent dependabot rebase comment timestamp (if any)
              recent=$(echo "$comments" | jq -r '.[] | select(.body | contains("@dependabot rebase")) | .created_at' | sort -r | head -n1 || true)

              if [ -z "$recent" ]; then
                echo "Posting rebase comment on PR #$number"
                curl -s -X POST -H "Authorization: token $TOKEN" -H "Accept: application/vnd.github+json" "https://api.github.com/repos/$REPO/issues/$number/comments" -d '{"body":"@dependabot rebase"}' >/dev/null
              else
                # Skip if a rebase comment was posted within the last 6 hours
                now_epoch=$(date -u +%s)
                recent_epoch=$(date -d "$recent" +%s)
                age=$((now_epoch - recent_epoch))

                if [ "$age" -lt $((6*60*60)) ]; then
                  echo "Skipping PR #$number - rebase comment posted recently ($recent)"
                else
                  echo "Posting rebase comment on PR #$number (previous comment older than 6h)"
                  curl -s -X POST -H "Authorization: token $TOKEN" -H "Accept: application/vnd.github+json" "https://api.github.com/repos/$REPO/issues/$number/comments" -d '{"body":"@dependabot rebase"}' >/dev/null
                fi
              fi
            else
              echo "PR #$number is up to date"
            fi
          done
